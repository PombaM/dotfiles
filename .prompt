# get current branch in git repo
function parse_prompt() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		printf "\e[94m${BRANCH}\e[0m${STAT}\e[0m "
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=" \e[33m⎇"
	fi
	if [ "${ahead}" == "0" ]; then
		bits=" \e[90m⇡"
	fi
	if [ "${newfile}" == "0" ]; then
		bits=" \e[95m➕ "
	fi
	if [ "${untracked}" == "0" ]; then
		bits=" \e[35m❓"
	fi
	if [ "${deleted}" == "0" ]; then
		bits=" \e[31m🗑"
	fi
	if [ "${dirty}" == "0" ]; then
		bits=" \e[31m✘"
	fi
	if [ ! "${bits}" == "" ]; then
		echo -e "${bits}"
	else
		echo -e " \e[32m✔"
	fi
}

export PS1="\w \`parse_prompt\`"
